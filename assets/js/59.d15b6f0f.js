(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{188:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),s("ol",[t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("li",[s("p",[t._v("Virtual DOM 是用一个原生的js对象描述一个DOM节点的方法，用 VNode 这个class描述，定义在 "),s("code",[t._v("src/core/vdom/vnode.js")]),t._v("\n其实现借鉴了 "),s("a",{attrs:{href:"https://github.com/snabbdom/snabbdom",target:"_blank",rel:"noopener noreferrer"}},[t._v("snabbdom"),s("OutboundLink")],1),t._v(" 实现虚拟DOM的库")])]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7)]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),s("p",[t._v("参考资料：\n"),s("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js 技术揭秘"),s("OutboundLink")],1)])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第一章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一章","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一章")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第二章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二章","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二章")])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("$options 存储了 初始化vue实例时传入的选项")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("data的初始化："),s("code",[t._v("this.$options.data")]),t._v(" 简写为 "),s("code",[t._v("this.data")]),t._v("\n使用 es6 的 proxy 代理了 data属性(函数)，实现方式："),s("code",[t._v("proxy(vm, '_data', key)")]),t._v("\n即 对于")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" o\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以下方法均能访问到data里的数据：")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hello\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hello\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hello\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("vm._render 最终是通过执行 createElement 方法并返回的是 VNode")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("使用 "),e("code",[this._v("createElement")]),this._v("创建VNode，定义在 "),e("code",[this._v("src/core/vdom/create-elemenet.js")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[this._v("_update 方法的作用是把 VNode 渲染成真实的 DOM，它的定义在 "),e("code",[this._v("src/core/instance/lifecycle.js")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("li",[s("p",[t._v("_update 的核心就是调用 vm."),s("strong",[t._v("patch")]),t._v(" 方法，它的定义在"),s("code",[t._v("src/platform/web/runtime/index.js")]),t._v("里，因为其与平台相关，再往下看它的实现，是由定义在"),s("code",[t._v("src/core/vdom/patch.js")]),t._v(" 的 createPatchFunction 函数，通过在"),s("code",[t._v("src/platform/web/runtime/patch.js")]),t._v(" 中预传入 与平台相关的 nodeOps 参数和 modules 参数，返回一个只接受四个参数，并已预定义好与平台相关参数的 vm."),s("strong",[t._v("patch")]),t._v(" 方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第三章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三章","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三章")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("p",[this._v("组件化：组件是资源独立的，组件在系统内部可复用，组件和组件之间可以嵌套。")])]),this._v(" "),e("li",[e("p",[this._v("如果给 render 函数 的 createElement 传入的是一个组件，则会调用 createComponent 方法创建 VNode，定义在 "),e("code",[this._v("src/core/vdom/create-component.js")]),this._v(" 中")])]),this._v(" "),e("li")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"第四章-双向绑定，更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四章-双向绑定，更新","aria-hidden":"true"}},[this._v("#")]),this._v(" 第四章 双向绑定，更新")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ol",[s("li",[s("p",[t._v("响应式对象data：通过定义在 "),s("code",[t._v("src/core/observer/index.js")]),t._v(" 中的 observe 给非 VNode 的对象类型数据添加一个 Observer")])]),t._v(" "),s("li",[s("p",[t._v("Observer 是一个类，它的作用是给对象的属性添加 getter 和 setter，用于依赖收集和派发更新")])]),t._v(" "),s("li",[s("p",[t._v("依赖收集：响应式对象 getter 相关的逻辑就是做依赖收集，其中 Dep 是整个 getter 依赖收集的核心，它的定义在 "),s("code",[t._v("src/core/observer/dep.js")]),t._v(" 中")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"看源码的技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#看源码的技巧","aria-hidden":"true"}},[this._v("#")]),this._v(" 看源码的技巧")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("一次看一条分支")])])}],!1,null,null,null);e.default=n.exports}}]);