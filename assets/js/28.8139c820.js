(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{239:function(t,n,s){"use strict";s.r(n);var a=s(0),p=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[s("blockquote",[s("p",[t._v("关键词：面向对象，原型，构造函数，实例，继承，ES6的class")])]),t._v(" "),s("p",[t._v("面向对象的编程方式(OOP: Object Oriented Programming)是一种程序设计的架构，面向对象的程序设计完全不同于传统的面向过程程序设计，它大大地降低了软件开发的难度，使编程就像搭积木一样简单，同样在js里也有类似的实现，这就是就是js里的 "),s("code",[t._v("原型")])]),t._v(" "),s("p",[t._v("tip: 面向对象的特点："),s("code",[t._v("封装，继承，多态")])]),t._v(" "),s("p",[s("code",[t._v("封装")]),t._v("：隐藏对象的属性和实现细节，仅对外提供公共访问方式，使得整个系统能由多个高内聚，低耦合的模块组装而成，模块复用提高了代码复用能力")]),t._v(" "),s("p",[s("code",[t._v("继承")]),t._v("：从已有父类中派生出新的子类，子类继承父类的方法和属性，并且可以根据自己的需求扩展出新的行为，数据和方法复用提高代码复用能力")]),t._v(" "),s("p",[s("code",[t._v("派生")]),t._v("：子类在父类方法和属性的基础上产生了新的方法和属性")]),t._v(" "),s("p",[s("code",[t._v("多态")]),t._v("：继承自一个每个对象可以用自己的方式去响应共同的调用函数，产生不同的行为")]),t._v(" "),s("p",[s("code",[t._v("抽象")]),t._v("：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("理解原型")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("在js中，对象是属性名和属性值的集合，对象属性可以使简单值，函数或其他对象，同时，js可以动态修改和删除对象的属性。")])]),t._v(" "),s("li",[s("p",[t._v("每个对象都有原型这个内置属性，准确的说，是含有对原型的引用，当查找属性时，若对象本身不具有此属性，则会检查它的原型上是否有此属性，从根本上说，任意对象的原型也是一个对象")])]),t._v(" "),s("li",[s("p",[t._v("对象的原型通过"),s("code",[t._v("prototype")]),t._v("来访问和设置，例如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" animal "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    kind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animal'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("talk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'talk'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用此方法设置animal对象为person对象的原型")]),t._v("\n  Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrototypeOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出： eat")]),t._v("\n  person"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出： animal ")]),t._v("\n")])])]),s("p",[t._v("可以看出，"),s("code",[t._v("person")]),t._v(" 对象继承了 "),s("code",[t._v("animal")]),t._v("对象\n如果打印出"),s("code",[t._v("person")]),t._v(" 对象，是这样的，其中"),s("code",[t._v("__proto__")]),t._v("是对象的内置属性，也就是原型属性（prototype的缩写）：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" person "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("talk")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'talk'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    __proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      kind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animal'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("eat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      __proto__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里最终指向 Object 对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("原型链：在js里，每个对象都可以拥有一个原型(也只能有一个原型），原型也是一个对象，原型也可以拥有一个原型，以此形成了一个链")])])])]),t._v(" "),s("li",[s("p",[t._v("构造函数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("对象实例由构造函数通过 "),s("code",[t._v("new")]),t._v(" 操作符产生，其prototype属性共同指向构造函数的原型")])]),t._v(" "),s("li",[s("p",[t._v("我们要创建多个相同类型的对象的实例，通过构造函数来初始化对象为已知的初始状态")])]),t._v(" "),s("li",[s("p",[t._v("任何一个函数都可以做构造函数（构造器），构造函数具有可更改的原型对象，可通过"),s("code",[t._v(".prototype")]),t._v("属性修改")])])])]),t._v(" "),s("li")]),t._v(" "),s("p",[t._v("几个属性：\nconstructor:\nprototype:\n"),s("em",[t._v("proto")]),t._v(":")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("ES6里的实现")])])])}],!1,null,null,null);n.default=p.exports}}]);